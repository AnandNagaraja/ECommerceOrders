# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  RuntimeTarget: 'win10-x64'
  
steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build ECommerceOrders'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\ECommerceOrders --runtime $(RuntimeTarget) --self-contained false'
    zipAfterPublish: false


- script: dotnet test $(Build.SourcesDirectory)/ECommerceOrders --collect "Code coverage" --logger trx --settings $(Build.SourcesDirectory)/CodeCoverage.runsettings
  displayName: Run Tests

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
   
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/ECommerceOrders.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)\ECommerceOrders'
    zipAfterPublish: false 
   
- task: ArchiveFiles@1
  displayName: 'Create ECommerceOrders Deployment'
  inputs:
    rootFolder: '$(Build.ArtifactStagingDirectory)\ECommerceOrders'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\Packages\ECommerceOrders.zip'
        
- task: PublishPipelineArtifact@1
  displayName: 'Publish Compiled Artifact'
  inputs:
    TargetPath: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: ECommerceOrdersBuild
        